TODO


------------------
vNext (implemented, coming in the next release, probably available in the beta app)
Install beta app from: https://aka.ms/bctelemetry-isv-app-beta
------------------
* Performance: On page 'Long Running SQL queries', tuned data load, fixed broken analyze in KQL visual, added per-app/per-object visuals, added explanation for SQL queries
* Performance: new page showing Performance Toolkit (BCPT) data.

------------------
2022-12-01 release
------------------
* Usage: On pages 'Page views', 'Reports', and 'Feature Usage', Added new visuals 'X by Publisher' and 'X by Extension Version'
* Usage: On pages 'Clients', 'Locations', 'Reports', 'Feature Usage', 'Integrations', 'Keyvault' added new visuals 'X by app'
* Errors: on page 'Error dialogs', added visuals with info on top/bottom line of the stack trace
* Administration: on Configuration page, changed order of parameter visuals, added EnvironmentDim visual
* Administration: on Inventory page, added domain to 'Apps by environment' visual (GitHub issue #146)
* Administration: on AppsourceValidations page, added date filter and 'requests by date' visual (GitHub issue #162)
* Administration report: Added hierarchy, message details, and feature telemetry dimension for events on telemetry event statistics page
* Performance report: Added 'number of columns' and 'Take locks' fields to SQL statements visual on Long Running SQL page
* Performance report: Added ability to do version-to-version comparisons on 'Updates' page
* All four reports: turned on ability to download underlaying data from all visuals
* All four reports: turned on to analyze further with KQL on all pages
* Dataset: tuned all KQL queries. Impact is up to 5x faster refresh time.

------------------
2022-11-07 release
------------------
* Administration, Extension lifecycle page: fixed 'unknown message' for LC0010
* Administration, Extension lifecycle page: Added per-environment visual
* Administration, Upgrade flow page: Added per-app visual
* Administration, About the report page: Fixed wrong text and links
* Administration, app source validation page: added failure reason visual
* Administration report: New page 'Configuration' to show how the app has been configured.
* BC Telemetry App (Issue #145): changing order of top page filters to Publisher / App Name / App Id / Version (on Administration report)
* Performance: on pages 'Long running SQL', and 'Long running AL' added visual with info on top line of the stack trace
* Performance: on page 'Long running SQL', added 'Take locks' column
* Performance: on page 'Updates', added SQL row to SQL statement ratio
* Performance: on pages 'Outgoing ws', 'Incoming ws', 'Long running SQL', and 'Long running AL' changed sums to show data in seconds and adjusted avg to show ms with no decimals.
* Dataset: AAD tenant mapping more stable against json syntax errors


------------------
2022-09-28 release
------------------
* fixed (yet another) bug in datamodel for app source validation
* Administration report: new page for BCContainerHelper container usage (draft version)
* Administration report: new page for AL-Go for GitHub usage (draft version)

------------------
2022-09-27 release
------------------
* app source validation page now filters as expected
* demo data now shows failed app source validations


------------------
2022-09-21 release
------------------
* fixed bug in datamodel for app source validation


------------------
2022-09-07 release
------------------
Initial version published to app source for public preview.


-----
Ideas 
-----
-	Is it possible to add list of objects in a format like the AAD tenant mapping? So we can see objects especially pages and reports never used?
Need to know the scenario better here

-	In the extension lifecycle please filter out the “already synced” ;)
This is being fixed now by the compiler team.

-	In some pages you print stack traces or error message. This is fine, but can we add the operationId, so the developers can use it in KQL for further analysis.
Good idea, also valuable for the VAR app

-	In the Performance report a percentile (95th) would be useful (like in Azure Portal Application Insights).
Good idea, also valuable for the VAR app

-	Is it possible to visualize performance degradation over days or weeks?

-	Is it possible to group error message, like permission related error messages?

-	For performance and error analysis it would be nice the see if the process was initiated by the Job Queue. This could be done by object ids 450 or 451 in the call stack. Filtering on the background client type is not sufficient.
Good idea, also valuable for the VAR app

DONE: For webservice calls (especially the outgoing ones) add a filter for OnPrem, because this is nothing we can influence as an ISV.


All pages
* app filter slicer

Administration
* Updates funnel page 
* app source validation